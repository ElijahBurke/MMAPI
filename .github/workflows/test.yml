
# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
    runner-job:
    # You must use a Linux environment when using service containers or container jobs
    runs-on: ubuntu-latest

    # Service containers to run with `runner-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
      steps:
      # Downloads a copy of the code in your repository before running CI tests
      - name: Check out repository code
        uses: actions/checkout@v2

      # Performs a clean installation of all dependencies in the `package.json` file
      # For more information, see https://docs.npmjs.com/cli/ci.html
      - name: Install dependencies
        run: npm ci

      - name: Connect to PostgreSQL
        # Runs a script that creates a PostgreSQL client, populates
        # the client with data, and retrieves data
        working-directory: ./server
        run: node index.js
        
        env:
          # The hostname used to communicate with the PostgreSQL service container
          POSTGRES_HOST: localhost
          # The default PostgreSQL port
          POSTGRES_PORT: 5432
          
    build:
      runs-on: ubuntu-latest

      strategy:
      matrix:
        node-version: [10.x, 12.x, 14.x]

      steps:
       - uses: actions/checkout@v2
       - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
       with:
        node-version: ${{ matrix.node-version }}
          
    - name: npm INSTALL
      working-directory: ./server
      run: npm i
  
    - name: npm TEST
      working-directory: ./server
      run: npm test
    
    - name: npm CI
      working-directory: ./server
      run: npm ci

    - name: npm build
      working-directory: ./server
      run: npm run build --if-present
